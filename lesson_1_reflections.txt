1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
The comparison shows the lines that have different parts helps me locate the bugs quickly. What's more, the comparison of two different versions helps me to figure out what went wrong.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
In the long term, it happends frequently that I need to retrieve the previous versions of my files. It will save me a lot time and energy to have a easy access to the entire history of my files.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
The pros of manually choosing can be logical so it is easy to retrieve. The cons can be inconvinient since it is manually, and inconsistency since programmer may forget to save it. The pros of automatically saved can be convenient and consistency. The cons can be not logical which makes it harder to retrieve.

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because Git can save files that work togather while Google Docs save files work saparately.

5. How can you use the commands git log and git diff to view the history of files? 
The command git log shows all the history commits and the command git diff shows specific different places between two commits.

6. How might using version control make you more confident to make changes that could break something?
You can always save a commit and come back whenever you encounter into a bug.

7. Now that you have your workspace set up, what do you want to try using Git for?
I want to try it with my data visualization HW.
